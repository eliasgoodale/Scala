

/**
    Inspecting runtime type (including generics)

    As with other JVM languages, Scala's types are erased at compile time.
    We use TypeTags, objects that carry type information at compile time to run time.
    These are always generated by the compiler. The generation of this tag is triggered
    whenever an implicit parameter or context bound requiring a TypeTag is used.
    
    A TypeTag can only be obtained using implicit parameters
*/

import scala.reflect.runtime.{universe => ru}

l: List[Int] = List(1,2,3)

def getTypeTag[T: ru.TypeTag](obj: T) = ru.typeTag[T]

val theType = getTypeTag(l).tpe //ru.Type = List[Int]